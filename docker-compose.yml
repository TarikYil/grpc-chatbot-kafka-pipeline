version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - grpc-net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - grpc-net

  llm-server:
    build:
      context: .
      dockerfile: llm_server/Dockerfile
    container_name: llm-server
    ports:
      - "50051:50051"
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - grpc-net
    restart: always

  llm-client:
    build:
      context: .
      dockerfile: llm_client/Dockerfile
    container_name: llm-client
    depends_on:
      - llm-server
      - kafka
    networks:
      - grpc-net

  api-gateway:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - llm-client
    networks:
      - grpc-net

networks:
  grpc-net:
    driver: bridge
